package components

import (
	"time"
	"fmt"
	"strings"
	. "github.com/parthshahp/booknotes/internal/types"
)

templ HighlightsPage(book Book, entries []Entry, bookID string) {
	<div class="flex flex-col items-center justify-center">
		<div class="text-3xl font-bold pt-12">
			{ book.Title }
		</div>
		<div class="text-sm mt-2">
			{ strings.Join(book.Authors, ", ") }
		</div>
		<div class="text-sm mt-2">
			{ fmt.Sprintf("Number of Highlights: %d", book.EntryCount) }
		</div>
		<div class="flex justify-center">
			<div class="pt-12 mx-2">
				<button hx-get={ fmt.Sprintf("/handleExport/markdown/%s", bookID) } class="btn btn-primary rounded-lg btn-xs">
					Export to
					Anki
				</button>
			</div>
			<div class="pt-12 mx-2">
				<button hx-get={ fmt.Sprintf("/handleExport/markdown/%s", bookID) } class="btn btn-primary rounded-lg btn-xs">
					Export to
					Markdown
				</button>
			</div>
		</div>
		<div class="pt-12">
			for _, entry := range entries {
				@Highlight(fmt.Sprintf("%d", entry.ID), entry.Chapter, entry.Text, entry.Note, fmt.Sprintf("%d",
					entry.Page), time.Unix(entry.Time, 0).Format("2006-01-02"),
				)
			}
		</div>
	</div>
}

templ Highlight(id, chapter, text, note, page, createdOn string) {
	<div id={ fmt.Sprintf("replace-%s", id) } class="pt-12">
		<div class="card w-full bg-base-100 shadow-xl">
			<div class="card-body">
				<h2 class="card-title">{ chapter }, Page { page }</h2>
				<div class="italic">{ text }</div>
				<div class="">{ note }</div>
				<div class="">
					Highlighted on { createdOn }
				</div>
				<div class="card-actions justify-end">
					<button class="btn btn-primary rounded-xl" onclick={ showModalID(id) }>Edit</button>
					<dialog id={ id } class="modal">
						<div class="modal-box w-11/12 max-w-5xl">
							<h3 class="font-bold text-lg">Edit Highlight</h3>
							<form
								hx-post={ fmt.Sprintf("/highlights/edit/%s", id) }
								hx-target={ fmt.Sprintf("#replace-%s", id) }
								hx-swap="outerHTML"
							>
								@EditHighlight(chapter, text, note, page)
								<div class="modal-action">
									<button
										type="button"
										hx-confirm="Are you sure?"
										hx-delete={ fmt.Sprintf("/highlights/edit/%s", id) }
										hx-target={ fmt.Sprintf("#replace-%s", id) }
										hx-swap="outerHTML"
										class="btn btn-error rounded-xl"
									>Delete</button>
									<button type="submit" class="btn btn-primary rounded-xl">Save</button>
									<button type="button" onclick={ hideModalID(id) } class="btn btn-primary rounded-xl">Close</button>
								</div>
							</form>
						</div>
					</dialog>
				</div>
			</div>
		</div>
	</div>
}

func hideModalID(id string) templ.ComponentScript {
	var script templ.ComponentScript
	script.Call = fmt.Sprintf("document.getElementById('%s').close();", id)
	return script
}

func showModalID(id string) templ.ComponentScript {
	var script templ.ComponentScript
	script.Call = fmt.Sprintf("document.getElementById('%s').showModal();", id)
	return script
}

templ EditHighlight(chapter, text, note, page string) {
	<div class="form-control">
		<label class="label">
			<span class="label-text">Chapter</span>
		</label>
		<input type="text" name="chapter" placeholder="Chapter" class="input input-bordered" value={ chapter }/>
	</div>
	<div class="form-control">
		<label class="label">
			<span class="label-text">Page</span>
		</label>
		<input type="text" name="page" placeholder="Page" class="input input-bordered" value={ page }/>
	</div>
	<div class="form-control">
		<label class="label">
			<span class="label-text">Text</span>
		</label>
		<textarea placeholder="Text" name="text" class="textarea textarea-bordered" value={ text }>{ text }</textarea>
	</div>
	<div class="form-control">
		<label class="label">
			<span class="label-text">Note</span>
		</label>
		<textarea placeholder="Note" name="note" class="textarea textarea-bordered" value={ note }>{ note }</textarea>
	</div>
}

templ HighlightsSearch() {
	<div class="flex flex-col items-center justify-center">
		<div class="flex flex-col items-center justify-center py-4">
			<div class="text-3xl font-bold">Search Highlights</div>
			<input
				class="form-control border-2 input input-md input-bordered rounded-md my-6"
				type="search"
				name="search"
				placeholder="Search for highlights..."
				hx-post="/highlights/search"
				hx-trigger="input changed delay:500ms, search"
				hx-target="#search-results"
				hx-swap="innerHTML"
			/>
			<div class="flex flex-col items-center justify-center" id="search-results">
				@HighlightResults([]Entry{})
			</div>
		</div>
	</div>
}

templ HighlightResults(entries []Entry) {
	for _, entry := range entries {
		<div>
			{ fmt.Sprintf("%+v", entry) }
		</div>
	}
}
